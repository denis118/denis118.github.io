"use strict";import{isEscEvent}from"./utils.min.js";const cloneErrorNode=()=>{const e=document.querySelector("#error").content.querySelector(".error").cloneNode(!0),t=e.querySelector(".error__title"),r=e.querySelector(".error__button");return{newError:e,errorTitle:t,errorButton:r}},cloneSuccessNode=()=>{const e=document.querySelector("#success").content.querySelector(".success").cloneNode(!0),t=e.querySelector(".success__title"),r=e.querySelector(".success__button");return{newSuccess:e,successTitle:t,successButton:r}},showMessage=()=>(function(e,t={}){const r=document.querySelector(".page"),o=document.createDocumentFragment();let c=null,n=null;if(e){const{newError:e,errorTitle:r,errorButton:o}=cloneErrorNode();t.title&&(r.innerText=t.title),t.button&&(o.innerText=t.button),c=e,n=o}else{const{newSuccess:e,successTitle:r,successButton:o}=cloneSuccessNode();t.title&&(r.innerText=t.title),t.button&&(o.innerText=t.button),c=e,n=o}o.appendChild(c),r.appendChild(o);const s=()=>{r.removeChild(c),r.classList.remove("modal-open"),document.removeEventListener("click",u),document.removeEventListener("keydown",l)},u=e=>{(e.target.className.match(/^error$/)||e.target.className.match(/^success$/))&&s()},l=e=>{isEscEvent(e)&&s()};n.addEventListener("click",s,{once:!0}),document.addEventListener("click",u),document.addEventListener("keydown",l)});export{showMessage};